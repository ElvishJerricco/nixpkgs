From 642f7ee4fc019baa2844e8f70459b7c6f45101d4 Mon Sep 17 00:00:00 2001
From: John Ericson <John.Ericson@Obsidian.Systems>
Date: Sat, 23 Sep 2017 13:33:19 -0400
Subject: [PATCH] MachO.c: Expose at least machoGetMisalignment on ios

A middling subset of 938392c8515ccbe894714f43852fe604a21ce30b
---
 rts/linker/MachO.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/rts/linker/MachO.c b/rts/linker/MachO.c
index 55b2bf1ebc..c1fc149eae 100644
--- a/rts/linker/MachO.c
+++ b/rts/linker/MachO.c
@@ -1,7 +1,6 @@
 #include "Rts.h"
 
-#ifdef darwin_HOST_OS
-
+#if defined(darwin_HOST_OS) || defined(ios_HOST_OS)
 #include "RtsUtils.h"
 #include "GetEnv.h"
 #include "LinkerInternals.h"
@@ -16,6 +15,9 @@
 #include <mach-o/loader.h>
 #include <mach-o/nlist.h>
 #include <mach-o/reloc.h>
+#endif /* darwin_HOST_OS, ios_HOST_OS */
+
+#ifdef darwin_HOST_OS
 
 #if defined(HAVE_SYS_MMAN_H)
 #  include <sys/mman.h>
@@ -1205,6 +1207,9 @@ machoInitSymbolsWithoutUnderscore(void)
 }
 #endif
 
+#endif /* darwin_HOST_OS */
+
+#if defined(darwin_HOST_OS) || defined(ios_HOST_OS)
 /*
  * Figure out by how much to shift the entire Mach-O file in memory
  * when loading so that its single segment ends up 16-byte-aligned
@@ -1223,7 +1228,7 @@ machoGetMisalignment( FILE * f )
     }
     fseek(f, -sizeof(header), SEEK_CUR);
 
-#if x86_64_HOST_ARCH || powerpc64_HOST_ARCH
+#if x86_64_HOST_ARCH || powerpc64_HOST_ARCH || aarch64_HOST_ARCH
     if(header.magic != MH_MAGIC_64) {
         barf("Bad magic. Expected: %08x, got: %08x.",
              MH_MAGIC_64, header.magic);
@@ -1240,5 +1245,4 @@ machoGetMisalignment( FILE * f )
 
     return misalignment ? (16 - misalignment) : 0;
 }
-
-#endif /* darwin_HOST_OS */
+#endif /* darwin_HOST_OS, ios_HOST_OS */
-- 
2.14.1

